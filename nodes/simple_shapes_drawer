#!/usr/bin/env python

# import of relevant libraries
import rospy # module for ROS APIs

# import custom modules
from simple_shapes.aux_function import *
from simple_shapes.simple_shapes import SimpleShapes


def main():
    """ Main function """

    # initialization of node
    rospy.init_node("simple_shapes_drawer")

    # Sleep for a few seconds to wait for the registration.
    rospy.sleep(2)

    # get params of a polygon via param server
    side_number = rospy.get_param('~side_number')
    side_length = rospy.get_param('~side_length')
    dir_counter_clock = rospy.get_param('~dir_counter_clock')
    
    # Initialization of the class for the simple motion.
    simple_shapes = SimpleShapes(dir_counter_clock)

    # boot up robot and get the initial pose from odom topic one-time subscription
    simple_shapes.update_pose()
    
    # If interrupted, send a stop command.
    rospy.on_shutdown(simple_shapes.stop)

    # Robot start drawing the regular polygon shape!
    try:
        simple_shapes.shape_drawer(side_number, side_length, dir_counter_clock)
    
    except rospy.ROSInterruptException:
        rospy.logerr("ROS node interrupted.")

if __name__ == "__main__":
    """Run the main function."""
    main()
